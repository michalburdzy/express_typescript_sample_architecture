"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = require("path");
const emailRenderer_1 = require("../../../src/emailRenderer");
describe('emailRenderer', () => {
    test('template without params', () => __awaiter(void 0, void 0, void 0, function* () {
        const path = path_1.resolve(__dirname, './templateWithoutParams.hbs');
        const result = yield emailRenderer_1.emailRenderer(path);
        expect(result).toContain('EXAMPLE-STRING');
    }));
    test('template with params', () => __awaiter(void 0, void 0, void 0, function* () {
        const path = path_1.resolve(__dirname, './templateWithParams.hbs');
        const result = yield emailRenderer_1.emailRenderer(path, { foo: 'aezakmi' });
        expect(result).toContain('EXAMPLE-aezakmi-STRING');
    }));
});
//# sourceMappingURL=emailRenderer.test.js.map