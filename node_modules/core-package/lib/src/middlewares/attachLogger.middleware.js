"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.attachLoggerMiddleware = void 0;
const express_1 = require("express");
const express_pino_logger_1 = __importDefault(require("express-pino-logger"));
const node_1 = require("@sentry/node");
const logger_1 = require("../logger");
const parseServiceName = (service) => service.replace('/', '');
const isHealthCheck = (service, req) => req.path === `/${service}/status/healthcheck`;
const attachMiddleware = (logger) => (req, res, next) => {
    req.logger = logger;
    logger.attachRequest(req);
    return next();
};
const logMiddleware = (logger, service) => (req, res, next) => {
    if (isHealthCheck(service, req)) {
        return next();
    }
    return next(express_pino_logger_1.default({ logger })(req, res));
};
exports.attachLoggerMiddleware = ({ service, }) => {
    node_1.init({ dsn: process.env.SENTRY_DSN });
    const serviceName = parseServiceName(service);
    const logger = new logger_1.Logger(serviceName);
    return express_1.Router().use(attachMiddleware(logger), logMiddleware(logger.pinoLogger, serviceName));
};
//# sourceMappingURL=attachLogger.middleware.js.map