"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.emailRenderer = void 0;
const handlebars_1 = __importDefault(require("handlebars"));
const fs_1 = require("fs");
const path_1 = require("path");
const ENCODING = 'utf8';
const PARTIAL_NAME = 'layout';
const BASE_TEMPLATE_PATH = path_1.resolve(__dirname, '../static/templates/base.template.hbs');
function emailRenderer(templatePath, params) {
    return __awaiter(this, void 0, void 0, function* () {
        const baseSource = yield fs_1.promises.readFile(BASE_TEMPLATE_PATH, ENCODING);
        const templateSource = yield fs_1.promises.readFile(templatePath, ENCODING);
        handlebars_1.default.registerPartial(PARTIAL_NAME, templateSource);
        const template = handlebars_1.default.compile(baseSource);
        const htmlTemplate = template(params);
        handlebars_1.default.unregisterPartial(PARTIAL_NAME);
        return htmlTemplate;
    });
}
exports.emailRenderer = emailRenderer;
//# sourceMappingURL=index.js.map