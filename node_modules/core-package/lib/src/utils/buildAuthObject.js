"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.buildAuthObject = void 0;
const jsonwebtoken_1 = __importDefault(require("jsonwebtoken"));
const buildError_1 = require("../buildError");
const httpStatuses_1 = require("../httpStatuses");
function buildAuthObject(authorization) {
    var _a, _b;
    const token = authorization.replace('Bearer ', '');
    const decoded = jsonwebtoken_1.default.decode(token);
    if (!decoded) {
        throw buildError_1.buildError({
            message: 'Invalid JWT token format.',
            publicMessage: 'Invalid JWT token format.',
            code: 'invalid-jwt-format',
            statusCode: httpStatuses_1.HttpStatuses.UNAUTHORIZED,
        });
    }
    return {
        userId: decoded.userId,
        username: decoded.username,
        admin: (_a = decoded.admin) !== null && _a !== void 0 ? _a : false,
        avatar: decoded.avatar,
        subscription: (_b = decoded.subscription) !== null && _b !== void 0 ? _b : false,
    };
}
exports.buildAuthObject = buildAuthObject;
//# sourceMappingURL=buildAuthObject.js.map