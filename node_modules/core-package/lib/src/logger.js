"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Logger = void 0;
const pino_1 = __importDefault(require("pino"));
const node_1 = require("@sentry/node");
const DEFAULT_LOG_LEVEL = 'info';
class Logger {
    constructor(serviceName) {
        this.serviceName = serviceName;
        this.pinoLogger = pino_1.default({
            level: process.env.LOG_LEVEL || DEFAULT_LOG_LEVEL,
        });
    }
    attachRequest(req) {
        this.request = req;
    }
    debug({ message, context }) {
        this.pinoLogger.debug(Object.assign({}, context), message);
    }
    error(error) {
        node_1.setTag('service', this.serviceName);
        node_1.setTag('env', `${process.env.ENVIRONMENT}`);
        node_1.setContext('Request', {
            method: this.request.method,
            query: this.request.query,
            params: this.request.params,
            body: this.request.body,
            url: this.request.url,
            ip: this.request.ip,
            headers: this.request.headers,
        });
        node_1.captureException(error);
        this.pinoLogger.error(error);
    }
    info({ message, context }) {
        this.pinoLogger.info(Object.assign({}, context), message);
    }
    trace({ message, context }) {
        this.pinoLogger.trace(Object.assign({}, context), message);
    }
    warn({ message, context }) {
        this.pinoLogger.warn(Object.assign({}, context), message);
    }
}
exports.Logger = Logger;
//# sourceMappingURL=logger.js.map